# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016. A <a href="http://kennethreitz.com/pages/open-projects.html">Kenneth Reitz</a> Project. <a href="http://creativecommons.org/licenses/by-nc-sa/3.0/">CC BY-NC-SA 3.0</a>
# This file is distributed under the same license as the pythonguide package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: pythonguide 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-03-17 19:37+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Caio wzy <CaioWzy@gmail.com>, 2017\n"
"Language-Team: Portuguese (Brazil) (https://www.transifex.com/own-16/teams/72945/pt_BR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: pt_BR\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../../starting/install/linux.rst:4
msgid "Installing Python on Linux"
msgstr "Instalando Python no Linux"

#: ../../starting/install/linux.rst:6
msgid ""
"The latest versions of CentOS, Fedora, Redhat Enterprise (RHEL) and Ubuntu "
"**come with Python 2.7 out of the box**."
msgstr ""

#: ../../starting/install/linux.rst:9
msgid ""
"To see which version of Python you have installed, open a command prompt and"
" run"
msgstr ""

#: ../../starting/install/linux.rst:15
msgid ""
"Some older versions of RHEL and CentOS come with Python 2.4 which is "
"unacceptable for modern Python development. Fortunately, there are `Extra "
"Packages for Enterprise Linux`_ which include high quality additional "
"packages based on their Fedora counterparts. This repository contains a "
"Python 2.6 package specifically designed to install side-by-side with the "
"system's Python 2.4 installation."
msgstr ""

#: ../../starting/install/linux.rst:24
msgid ""
"You do not need to install or configure anything else to use Python. Having "
"said that, I would strongly recommend that you install the tools and "
"libraries described in the next section before you start building Python "
"applications for real-world use. In particular, you should always install "
"Setuptools and pip, as it makes it much easier for you to use other third-"
"party Python libraries."
msgstr ""

#: ../../starting/install/linux.rst:31
msgid "Setuptools & Pip"
msgstr ""

#: ../../starting/install/linux.rst:33
msgid ""
"The two most crucial third-party Python packages are `setuptools "
"<https://pypi.python.org/pypi/setuptools>`_ and `pip "
"<https://pip.pypa.io/en/stable/>`_."
msgstr ""

#: ../../starting/install/linux.rst:35
msgid ""
"Once installed, you can download, install and uninstall any compliant Python"
" software product with a single command. It also enables you to add this "
"network installation capability to your own Python software with very little"
" work."
msgstr ""

#: ../../starting/install/linux.rst:39
msgid ""
"Python 2.7.9 and later (on the python2 series), and Python 3.4 and later "
"include pip by default."
msgstr ""

#: ../../starting/install/linux.rst:42
msgid "To see if pip is installed, open a command prompt and run"
msgstr ""

#: ../../starting/install/linux.rst:48
msgid ""
"To install pip, `follow the official pip installation guide "
"<https://pip.pypa.io/en/latest/installing/>`_ - this will automatically "
"install the latest version of setuptools."
msgstr ""

#: ../../starting/install/linux.rst:51
msgid "Virtual Environments"
msgstr "Ambientes virtuais"

#: ../../starting/install/linux.rst:53
msgid ""
"A Virtual Environment is a tool to keep the dependencies required by "
"different projects in separate places, by creating virtual Python "
"environments for them. It solves the \"Project X depends on version 1.x but,"
" Project Y needs 4.x\" dilemma, and keeps your global site-packages "
"directory clean and manageable."
msgstr ""
"Um Virtual Environment (Ambiente virtual) é uma ferramenta que permite "
"guardar as dependências de projetos diferentes em lugares separados criando "
"um ambiente virtual Python para cada um deles. Isso resolve problemas como "
"\"O projeto X usa uma biblioteca na versão 1.x mas o projeto Y usa essa "
"mesma biblioteca mas na versão 4.x\" e mantém os seus pacotes instalados na "
"pasta site-packages global limpa e organizada."

#: ../../starting/install/linux.rst:58
msgid ""
"For example, you can work on a project which requires Django 1.10 while also"
" maintaining a project which requires Django 1.8."
msgstr ""
"Por exemplo, você pode trabalhar em um projeto que usa o Django na versão "
"1.10 enquanto também poderá trabalhar em um outro projeto que use o Django "
"mas na versão 1.8."

#: ../../starting/install/linux.rst:61
msgid ""
"To start using this and see more information: :ref:`Virtual Environments "
"<virtualenvironments-ref>` docs."
msgstr ""

#: ../../starting/install/linux.rst:63
msgid ""
"You can also use :ref:`virtualenvwrapper <virtualenvwrapper-ref>` to make it"
" easier to manage your virtual environments."
msgstr ""

#: ../../starting/install/linux.rst:68
msgid ""
"This page is a remixed version of `another guide "
"<http://www.stuartellis.eu/articles/python-development-windows/>`_, which is"
" available under the same license."
msgstr ""
